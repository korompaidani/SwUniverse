// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StarWars.Data.DbContexts;

namespace StarWars.Data.Migrations
{
    [DbContext(typeof(SwContext))]
    [Migration("20201129161056_PlanetDescription has been removed")]
    partial class PlanetDescriptionhasbeenremoved
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("StarWars.Data.Entities.Affiliation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CharacterAsMemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("History")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterAsMemberId");

                    b.ToTable("Affiliations");
                });

            modelBuilder.Entity("StarWars.Data.Entities.Character", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CharacterForApprenticeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CharacterForMasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EyeColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FamilyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("FavouriteShipId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FavouriteWeaponId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GivenName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("HairColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasTattoo")
                        .HasColumnType("bit");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<Guid?>("HomeWorldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LifeTimeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("SkinColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SkinPattern")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialrecognizance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpeciesName")
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterForApprenticeId");

                    b.HasIndex("CharacterForMasterId");

                    b.HasIndex("EyeColorId")
                        .IsUnique()
                        .HasFilter("[EyeColorId] IS NOT NULL");

                    b.HasIndex("FavouriteShipId")
                        .IsUnique()
                        .HasFilter("[FavouriteShipId] IS NOT NULL");

                    b.HasIndex("FavouriteWeaponId")
                        .IsUnique()
                        .HasFilter("[FavouriteWeaponId] IS NOT NULL");

                    b.HasIndex("GenderId")
                        .IsUnique()
                        .HasFilter("[GenderId] IS NOT NULL");

                    b.HasIndex("HairColorId")
                        .IsUnique()
                        .HasFilter("[HairColorId] IS NOT NULL");

                    b.HasIndex("HomeWorldId")
                        .IsUnique()
                        .HasFilter("[HomeWorldId] IS NOT NULL");

                    b.HasIndex("LifeTimeId")
                        .IsUnique()
                        .HasFilter("[LifeTimeId] IS NOT NULL");

                    b.HasIndex("SkinColorId")
                        .IsUnique()
                        .HasFilter("[SkinColorId] IS NOT NULL");

                    b.HasIndex("SpeciesName")
                        .IsUnique()
                        .HasFilter("[SpeciesName] IS NOT NULL");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("StarWars.Data.Entities.CharactersInFilms", b =>
                {
                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FilmId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CharacterId", "FilmId");

                    b.HasIndex("FilmId");

                    b.ToTable("CharactersInFilms");
                });

            modelBuilder.Entity("StarWars.Data.Entities.CharactersInSeries", b =>
                {
                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeriesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CharacterId", "SeriesId");

                    b.HasIndex("SeriesId");

                    b.ToTable("CharactersInSeries");
                });

            modelBuilder.Entity("StarWars.Data.Entities.Color", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("StarWars.Data.Entities.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("StarWars.Data.Entities.Film", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Film");
                });

            modelBuilder.Entity("StarWars.Data.Entities.Gender", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("StarWars.Data.Entities.LifeTime", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("BeginDate")
                        .HasColumnType("int");

                    b.Property<int?>("EndDate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Lifetimes");
                });

            modelBuilder.Entity("StarWars.Data.Entities.Planet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FloraAndFauna")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Geography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasRing")
                        .HasColumnType("bit");

                    b.Property<string>("History")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCrystalSite")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDestroyed")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("PlanetForMoonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Shape")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.HasKey("Id");

                    b.HasIndex("PlanetForMoonId");

                    b.ToTable("Planets");
                });

            modelBuilder.Entity("StarWars.Data.Entities.Series", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("StarWars.Data.Entities.Ship", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CharacterForOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasHyperSpaceEngine")
                        .HasColumnType("bit");

                    b.Property<string>("Kind")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterForOwnerId");

                    b.ToTable("Ships");
                });

            modelBuilder.Entity("StarWars.Data.Entities.Species", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid?>("PlanetForNativeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Name");

                    b.HasIndex("PlanetForNativeId");

                    b.ToTable("Species");
                });

            modelBuilder.Entity("StarWars.Data.Entities.Weapon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CharacterForOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WeaponName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterForOwnerId");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("StarWars.Data.Entities.Affiliation", b =>
                {
                    b.HasOne("StarWars.Data.Entities.Character", "CharacterAsMember")
                        .WithMany("MemberOf")
                        .HasForeignKey("CharacterAsMemberId");

                    b.Navigation("CharacterAsMember");
                });

            modelBuilder.Entity("StarWars.Data.Entities.Character", b =>
                {
                    b.HasOne("StarWars.Data.Entities.Character", "CharacterForApprentice")
                        .WithMany("Apprentices")
                        .HasForeignKey("CharacterForApprenticeId");

                    b.HasOne("StarWars.Data.Entities.Character", "CharacterForMaster")
                        .WithMany("Masters")
                        .HasForeignKey("CharacterForMasterId");

                    b.HasOne("StarWars.Data.Entities.Color", "EyeColor")
                        .WithOne("CharacterForEye")
                        .HasForeignKey("StarWars.Data.Entities.Character", "EyeColorId");

                    b.HasOne("StarWars.Data.Entities.Ship", "FavouriteShip")
                        .WithOne("CharacterForFavouriteOwner")
                        .HasForeignKey("StarWars.Data.Entities.Character", "FavouriteShipId");

                    b.HasOne("StarWars.Data.Entities.Weapon", "FavouriteWeapon")
                        .WithOne("CharacterForFavouriteOwner")
                        .HasForeignKey("StarWars.Data.Entities.Character", "FavouriteWeaponId");

                    b.HasOne("StarWars.Data.Entities.Gender", "Gender")
                        .WithOne("Character")
                        .HasForeignKey("StarWars.Data.Entities.Character", "GenderId");

                    b.HasOne("StarWars.Data.Entities.Color", "HairColor")
                        .WithOne("CharacterForHair")
                        .HasForeignKey("StarWars.Data.Entities.Character", "HairColorId");

                    b.HasOne("StarWars.Data.Entities.Planet", "HomeWorld")
                        .WithOne("CharacterForHome")
                        .HasForeignKey("StarWars.Data.Entities.Character", "HomeWorldId");

                    b.HasOne("StarWars.Data.Entities.LifeTime", "LifeTime")
                        .WithOne("Character")
                        .HasForeignKey("StarWars.Data.Entities.Character", "LifeTimeId");

                    b.HasOne("StarWars.Data.Entities.Color", "SkinColor")
                        .WithOne("CharacterForSkin")
                        .HasForeignKey("StarWars.Data.Entities.Character", "SkinColorId");

                    b.HasOne("StarWars.Data.Entities.Species", "Species")
                        .WithOne("Character")
                        .HasForeignKey("StarWars.Data.Entities.Character", "SpeciesName");

                    b.Navigation("CharacterForApprentice");

                    b.Navigation("CharacterForMaster");

                    b.Navigation("EyeColor");

                    b.Navigation("FavouriteShip");

                    b.Navigation("FavouriteWeapon");

                    b.Navigation("Gender");

                    b.Navigation("HairColor");

                    b.Navigation("HomeWorld");

                    b.Navigation("LifeTime");

                    b.Navigation("SkinColor");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("StarWars.Data.Entities.CharactersInFilms", b =>
                {
                    b.HasOne("StarWars.Data.Entities.Character", "Character")
                        .WithMany("CharactersInFilms")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarWars.Data.Entities.Film", "Film")
                        .WithMany("CharactersInFilms")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Film");
                });

            modelBuilder.Entity("StarWars.Data.Entities.CharactersInSeries", b =>
                {
                    b.HasOne("StarWars.Data.Entities.Character", "Character")
                        .WithMany("CharactersInSeries")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarWars.Data.Entities.Series", "Series")
                        .WithMany("CharactersInSeries")
                        .HasForeignKey("SeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Series");
                });

            modelBuilder.Entity("StarWars.Data.Entities.Planet", b =>
                {
                    b.HasOne("StarWars.Data.Entities.Planet", "PlanetForMoon")
                        .WithMany("Moons")
                        .HasForeignKey("PlanetForMoonId");

                    b.Navigation("PlanetForMoon");
                });

            modelBuilder.Entity("StarWars.Data.Entities.Ship", b =>
                {
                    b.HasOne("StarWars.Data.Entities.Character", "CharacterForOwner")
                        .WithMany("Ships")
                        .HasForeignKey("CharacterForOwnerId");

                    b.Navigation("CharacterForOwner");
                });

            modelBuilder.Entity("StarWars.Data.Entities.Species", b =>
                {
                    b.HasOne("StarWars.Data.Entities.Planet", "PlanetForNative")
                        .WithMany("NativeSpecies")
                        .HasForeignKey("PlanetForNativeId");

                    b.Navigation("PlanetForNative");
                });

            modelBuilder.Entity("StarWars.Data.Entities.Weapon", b =>
                {
                    b.HasOne("StarWars.Data.Entities.Character", "CharacterForOwner")
                        .WithMany("Weapons")
                        .HasForeignKey("CharacterForOwnerId");

                    b.Navigation("CharacterForOwner");
                });

            modelBuilder.Entity("StarWars.Data.Entities.Character", b =>
                {
                    b.Navigation("Apprentices");

                    b.Navigation("CharactersInFilms");

                    b.Navigation("CharactersInSeries");

                    b.Navigation("Masters");

                    b.Navigation("MemberOf");

                    b.Navigation("Ships");

                    b.Navigation("Weapons");
                });

            modelBuilder.Entity("StarWars.Data.Entities.Color", b =>
                {
                    b.Navigation("CharacterForEye");

                    b.Navigation("CharacterForHair");

                    b.Navigation("CharacterForSkin");
                });

            modelBuilder.Entity("StarWars.Data.Entities.Film", b =>
                {
                    b.Navigation("CharactersInFilms");
                });

            modelBuilder.Entity("StarWars.Data.Entities.Gender", b =>
                {
                    b.Navigation("Character");
                });

            modelBuilder.Entity("StarWars.Data.Entities.LifeTime", b =>
                {
                    b.Navigation("Character");
                });

            modelBuilder.Entity("StarWars.Data.Entities.Planet", b =>
                {
                    b.Navigation("CharacterForHome");

                    b.Navigation("Moons");

                    b.Navigation("NativeSpecies");
                });

            modelBuilder.Entity("StarWars.Data.Entities.Series", b =>
                {
                    b.Navigation("CharactersInSeries");
                });

            modelBuilder.Entity("StarWars.Data.Entities.Ship", b =>
                {
                    b.Navigation("CharacterForFavouriteOwner");
                });

            modelBuilder.Entity("StarWars.Data.Entities.Species", b =>
                {
                    b.Navigation("Character");
                });

            modelBuilder.Entity("StarWars.Data.Entities.Weapon", b =>
                {
                    b.Navigation("CharacterForFavouriteOwner");
                });
#pragma warning restore 612, 618
        }
    }
}
